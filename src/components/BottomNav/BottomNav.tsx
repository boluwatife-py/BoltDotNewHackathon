import React from "react";
import { Link } from "react-router-dom";
import { useTab } from "../../context/TabContext";

const navItems = [
  {
    name: "Home",
    route: "/",
    icon: (active: boolean) => (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={`w-6 h-6 ${active ? "text-black" : "text-[#A09CAB]"}`}
      >
        <path
          d="M6 19H9V14C9 13.7167 9.096 13.4793 9.288 13.288C9.48 13.0967 9.71733 13.0007 10 13H14C14.2833 13 14.521 13.096 14.713 13.288C14.905 13.48 15.0007 13.7173 15 14V19H18V10L12 5.5L6 10V19ZM4 19V10C4 9.68333 4.071 9.38333 4.213 9.1C4.355 8.81667 4.55067 8.58333 4.8 8.4L10.8 3.9C11.15 3.63333 11.55 3.5 12 3.5C12.45 3.5 12.85 3.63333 13.2 3.9L19.2 8.4C19.45 8.58333 19.646 8.81667 19.788 9.1C19.93 9.38333 20.0007 9.68333 20 10V19C20 19.55 19.804 20.021 19.412 20.413C19.02 20.805 18.5493 21.0007 18 21H14C13.7167 21 13.4793 20.904 13.288 20.712C13.0967 20.52 13.0007 20.2827 13 20V15H11V20C11 20.2833 10.904 20.521 10.712 20.713C10.52 20.905 10.2827 21.0007 10 21H6C5.45 21 4.97933 20.8043 4.588 20.413C4.19667 20.0217 4.00067 19.5507 4 19Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    name: "Scan",
    route: "/scan",
    icon: (active: boolean) => (
      <svg
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={`w-6 h-6 ${active ? "text-black" : "text-[#A09CAB]"}`}
      >
        <path
          d="M14.6201 4L16.4501 6H20.5001V18H4.50006V6H8.55006L10.3801 4H14.6201ZM15.5001 2H9.50006L7.67006 4H4.50006C3.40006 4 2.50006 4.9 2.50006 6V18C2.50006 19.1 3.40006 20 4.50006 20H20.5001C21.6001 20 22.5001 19.1 22.5001 18V6C22.5001 4.9 21.6001 4 20.5001 4H17.3301L15.5001 2ZM12.5001 9C14.1501 9 15.5001 10.35 15.5001 12C15.5001 13.65 14.1501 15 12.5001 15C10.8501 15 9.50006 13.65 9.50006 12C9.50006 10.35 10.8501 9 12.5001 9ZM12.5001 7C9.74006 7 7.50006 9.24 7.50006 12C7.50006 14.76 9.74006 17 12.5001 17C15.2601 17 17.5001 14.76 17.5001 12C17.5001 9.24 15.2601 7 12.5001 7Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    name: "Scheduler",
    route: "/scheduler",
    icon: (active: boolean) => (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={`w-6 h-6 ${active ? "text-black" : "text-[#A09CAB]"}`}
      >
        <path
          d="M9 20H6C4.93913 20 3.92172 19.5786 3.17157 18.8284C2.42143 18.0783 2 17.0609 2 16V7C2 5.93913 2.42143 4.92172 3.17157 4.17157C3.92172 3.42143 4.93913 3 6 3H17C18.0609 3 19.0783 3.42143 19.8284 4.17157C20.5786 4.92172 21 5.93913 21 7V10M8 2V4M15 2V4M2 8H21M18.5 15.643L17 17.143"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M17 22C19.7614 22 22 19.7614 22 17C22 14.2386 19.7614 12 17 12C14.2386 12 12 14.2386 12 17C12 19.7614 14.2386 22 17 22Z"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    ),
  },
  {
    name: "Chatbot",
    route: "/chatbot",
    icon: (active: boolean) => (
      <svg
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={`w-6 h-6 ${active ? "text-black" : "text-[#A09CAB]"}`}
      >
        <path
          d="M9.5 12H8V10.5H9.5V12ZM15.5 12H14V10.5H15.5V12ZM21.5 10.5V13.5H20V17.25C20 17.5625 19.9414 17.8555 19.8242 18.1289C19.707 18.4023 19.5469 18.6406 19.3438 18.8438C19.1406 19.0469 18.9023 19.207 18.6289 19.3242C18.3555 19.4414 18.0625 19.5 17.75 19.5H14.6562L9.5 23.9062V19.5H5.75C5.4375 19.5 5.14453 19.4414 4.87109 19.3242C4.59766 19.207 4.35938 19.0469 4.15625 18.8438C3.95312 18.6406 3.79297 18.4023 3.67578 18.1289C3.55859 17.8555 3.5 17.5625 3.5 17.25V13.5H2V10.5H3.5V8.25C3.5 7.9375 3.55859 7.64453 3.67578 7.37109C3.79297 7.09766 3.95312 6.85938 4.15625 6.65625C4.35938 6.45312 4.59766 6.29297 4.87109 6.17578C5.14453 6.05859 5.4375 6 5.75 6H11V3.55078C10.7734 3.41797 10.5938 3.23438 10.4609 3C10.3281 2.76562 10.2578 2.51562 10.25 2.25C10.25 2.03906 10.2891 1.84375 10.3672 1.66406C10.4453 1.48438 10.5508 1.32812 10.6836 1.19531C10.8164 1.0625 10.9766 0.953125 11.1641 0.867188C11.3516 0.78125 11.5469 0.742188 11.75 0.75C11.9609 0.75 12.1562 0.789062 12.3359 0.867188C12.5156 0.945312 12.6719 1.05078 12.8047 1.18359C12.9375 1.31641 13.0469 1.47656 13.1328 1.66406C13.2188 1.85156 13.2578 2.04687 13.25 2.25C13.25 2.51562 13.1836 2.76562 13.0508 3C12.918 3.23438 12.7344 3.41797 12.5 3.55078V6H17.75C18.0625 6 18.3555 6.05859 18.6289 6.17578C18.9023 6.29297 19.1406 6.45312 19.3438 6.65625C19.5469 6.85938 19.707 7.09766 19.8242 7.37109C19.9414 7.64453 20 7.9375 20 8.25V10.5H21.5ZM18.5 8.25C18.5 8.04687 18.4258 7.87109 18.2773 7.72266C18.1289 7.57422 17.9531 7.5 17.75 7.5H5.75C5.54688 7.5 5.37109 7.57422 5.22266 7.72266C5.07422 7.87109 5 8.04687 5 8.25V17.25C5 17.4531 5.07422 17.6289 5.22266 17.7773C5.37109 17.9258 5.54688 18 5.75 18H11V20.6484L14.0938 18H17.75C17.9531 18 18.1289 17.9258 18.2773 17.7773C18.4258 17.6289 18.5 17.4531 18.5 17.25V8.25ZM8.52734 13.6641C8.95703 14.0938 9.44922 14.4219 10.0039 14.6484C10.5586 14.875 11.1406 14.9922 11.75 15C12.3594 15 12.9414 14.8867 13.4961 14.6602C14.0508 14.4336 14.543 14.1016 14.9727 13.6641L16.0273 14.7305C15.457 15.3008 14.8047 15.7383 14.0703 16.043C13.3359 16.3477 12.5625 16.5 11.75 16.5C10.9453 16.5 10.1758 16.3477 9.44141 16.043C8.70703 15.7383 8.05078 15.3008 7.47266 14.7305L8.52734 13.6641Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    name: "Settings",
    route: "/settings",
    icon: (active: boolean) => (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={`w-6 h-6 ${active ? "text-black" : "text-[#A09CAB]"}`}
      >
        <path
          d="M19.9 12.6599C19.7397 12.4774 19.6513 12.2428 19.6513 11.9999C19.6513 11.757 19.7397 11.5224 19.9 11.3399L21.18 9.89989C21.3211 9.74256 21.4087 9.5446 21.4302 9.3344C21.4518 9.12421 21.4062 8.91258 21.3 8.72989L19.3 5.2699C19.1949 5.08742 19.0349 4.94277 18.8428 4.85658C18.6506 4.77039 18.4362 4.74705 18.23 4.7899L16.35 5.1699C16.1108 5.21932 15.8618 5.17948 15.6499 5.0579C15.438 4.93631 15.278 4.74138 15.2 4.5099L14.59 2.6799C14.5229 2.48127 14.3951 2.30876 14.2246 2.18674C14.0542 2.06471 13.8497 1.99935 13.64 1.9999H9.64002C9.42195 1.98851 9.20615 2.04882 9.02558 2.17161C8.84501 2.2944 8.7096 2.47291 8.64002 2.6799L8.08002 4.5099C8.00202 4.74138 7.84199 4.93631 7.63013 5.0579C7.41827 5.17948 7.16924 5.21932 6.93002 5.1699L5.00002 4.7899C4.80457 4.76228 4.60532 4.79312 4.42737 4.87853C4.24941 4.96395 4.10072 5.10012 4.00002 5.2699L2.00002 8.72989C1.89118 8.91054 1.84224 9.12098 1.8602 9.33112C1.87816 9.54126 1.9621 9.74034 2.10002 9.89989L3.37002 11.3399C3.53034 11.5224 3.61875 11.757 3.61875 11.9999C3.61875 12.2428 3.53034 12.4774 3.37002 12.6599L2.10002 14.0999C1.9621 14.2595 1.87816 14.4585 1.8602 14.6687C1.84224 14.8788 1.89118 15.0892 2.00002 15.2699L4.00002 18.7299C4.10512 18.9124 4.26514 19.057 4.45727 19.1432C4.6494 19.2294 4.86384 19.2527 5.07002 19.2099L6.95002 18.8299C7.18924 18.7805 7.43827 18.8203 7.65013 18.9419C7.86199 19.0635 8.02202 19.2584 8.10002 19.4899L8.71002 21.3199C8.7796 21.5269 8.91501 21.7054 9.09558 21.8282C9.27615 21.951 9.49195 22.0113 9.71002 21.9999H13.71C13.9197 22.0004 14.1242 21.9351 14.2946 21.8131C14.4651 21.691 14.5929 21.5185 14.66 21.3199L15.27 19.4899C15.348 19.2584 15.508 19.0635 15.7199 18.9419C15.9318 18.8203 16.1808 18.7805 16.42 18.8299L18.3 19.2099C18.5062 19.2527 18.7206 19.2294 18.9128 19.1432C19.1049 19.057 19.2649 18.9124 19.37 18.7299L21.37 15.2699C21.4762 15.0872 21.5218 14.8756 21.5002 14.6654C21.4787 14.4552 21.3911 14.2572 21.25 14.0999L19.9 12.6599ZM18.41 13.9999L19.21 14.8999L17.93 17.1199L16.75 16.8799C16.0298 16.7327 15.2806 16.855 14.6446 17.2237C14.0086 17.5924 13.5302 18.1817 13.3 18.8799L12.92 19.9999H10.36L10 18.8599C9.76987 18.1617 9.2914 17.5724 8.65542 17.2037C8.01945 16.835 7.27024 16.7127 6.55002 16.8599L5.37002 17.0999L4.07002 14.8899L4.87002 13.9899C5.36197 13.4399 5.63395 12.7278 5.63395 11.9899C5.63395 11.252 5.36197 10.5399 4.87002 9.98989L4.07002 9.0899L5.35002 6.88989L6.53002 7.1299C7.25024 7.27712 7.99945 7.15478 8.63542 6.78609C9.2714 6.41741 9.74987 5.82805 9.98002 5.1299L10.36 3.9999H12.92L13.3 5.13989C13.5302 5.83805 14.0086 6.42741 14.6446 6.79609C15.2806 7.16478 16.0298 7.28712 16.75 7.13989L17.93 6.8999L19.21 9.11989L18.41 10.0199C17.9236 10.5687 17.655 11.2766 17.655 12.0099C17.655 12.7432 17.9236 13.4511 18.41 13.9999ZM11.64 7.9999C10.8489 7.9999 10.0755 8.23449 9.41774 8.67402C8.75994 9.11354 8.24725 9.73826 7.9445 10.4692C7.64175 11.2001 7.56254 12.0043 7.71688 12.7803C7.87122 13.5562 8.25218 14.2689 8.81159 14.8283C9.371 15.3877 10.0837 15.7687 10.8597 15.923C11.6356 16.0774 12.4398 15.9982 13.1708 15.6954C13.9017 15.3927 14.5264 14.88 14.9659 14.2222C15.4054 13.5644 15.64 12.791 15.64 11.9999C15.64 10.939 15.2186 9.92161 14.4684 9.17147C13.7183 8.42132 12.7009 7.9999 11.64 7.9999ZM11.64 13.9999C11.2445 13.9999 10.8578 13.8826 10.5289 13.6628C10.2 13.4431 9.94363 13.1307 9.79226 12.7653C9.64088 12.3998 9.60128 11.9977 9.67845 11.6097C9.75562 11.2218 9.9461 10.8654 10.2258 10.5857C10.5055 10.306 10.8619 10.1155 11.2498 10.0383C11.6378 9.96115 12.0399 10.0008 12.4054 10.1521C12.7708 10.3035 13.0832 10.5599 13.303 10.8888C13.5227 11.2177 13.64 11.6043 13.64 11.9999C13.64 12.5303 13.4293 13.039 13.0542 13.4141C12.6792 13.7892 12.1705 13.9999 11.64 13.9999Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
];

const BottomNavBar: React.FC = () => {
  const { activeTab } = useTab();

  return (
    <div className="fixed bottom-0 left-0 right-0 z-50 bg-white shadow-md">
      <div className="flex justify-around items-start px-[1rem] py-[0.5rem]">
        {navItems.map(({ name, route, icon }) => {
          const isActive = name === activeTab;
          return (
            <Link
              to={route}
              key={name}
              className="flex flex-col items-center justify-between w-[3rem]"
            >
              {icon(isActive)}
              <span
                className={`text-[0.6875rem] font-medium ${
                  isActive ? "text-black" : "text-[#A09CAB]"
                }`}
              >
                {name}
              </span>
            </Link>
          );
        })}
      </div>
    </div>
  );
};

export default BottomNavBar;
